{
    "fileVersion": {
        "version": "1.1"
    },
    "cloudServicesTitle":"Cloud services available", 
    "netatmoTitle":"Netatmo cloud platform", 
    "strapiTitle":"Neu cloud platform - Strapi",
    "strapiLoginTitle":"Login in Strapi",
    "strapiLoginDescription":"Hello! Log in with your Username.",
    "username":"Username",
    "password":"Password",  
    "passwordRequired":"Password is required!",
    "usernameRequired":"Username is required!",
    "loginButton":"LOG IN",
    "footerTifle":"e-Vita Project",
    "registrationTitle":"Complete your Profile",
    "registrationDescription":"Please enter your following additional information",
    "countryLabel":"Country",
    "cityLabel":"City",
    "languageLabel":"Language",
    "registerButton":"SUBMIT",
    "registerDeviceButton":"Register Device",
    "devicesLabel":"Devices",
    "cloudServicesLabel":"Cloud services",
    "homepageLabel":"Dashboard", 
    "registerDeviceLabel":"Register a new device",
    "registerServiceLabel":"Register a new service",
    "type":"Type",
    "dataModelType":"Data Model Type",
    "sourceDeviceId":"Source Device ID",
    "deviceId":"e-VITA Device ID",
    "deviceName":"Device Name",
    "deviceQRCodeLabel":"QR Code:", 
    "add":"Add", 
    "registerServiceDialogLabel":"Select the cloud service to access",
    "homepageDescription":"Latest measurements from the Context Broker of your registered devices",
    "lastMeasure":"Last measure",
    "createDate":"Creation Date",
    "modifiedDate":"Last modification Date",
    "attributes":"Attributes",
    "delete":"Delete",
    "close":"Close",
    "deleteDescription":"Do you confirm that you want to delete the selected device?",
    "deleteLabel":"Delete device",
    "netatmoCloudServiceDescriptionFront":"Access your Netatmo area to get the data of your app connected to your devices.",
    "netatmoCloudServiceDescriptionBack":"Netatmo products are ready to communicate with all app and service to fit your vision of what makes a smarter home.",
    "strapiCloudServiceDescriptionFront":"Access your Strapi area to get the data of your app connected to your Neu device.",
    "strapiCloudServiceDescriptionBack":"Neu is a wearable device that measures brain signals for cognitive training. The records of training results are stored in the Strapi CMS cloud platform.",
    "ouraringCloudServiceDescriptionFront":"Access your Oura ring area to get the data of your app connected to your device.",
    "serviceDescription":"Description of the service",
    "updateProfileTitle":"Update your profile",
    "updateProfileDescription":"Please enter the information fields to modify",
    "gender":"Gender",
    "notWantProvide":"Not want to provide",
    "male":"Male",
    "female":"Female",
    "other":"Other",
    "telegramUsername":"Telegram Username",
    "update":"Update",
    "cloudLogout":"Cloud Service Logout",
    "cloudLogoutDescription":"Do you also want to delete all the connected devices?",
    "yes":"Yes",
    "no":"No",
    "logInButton":"Sign in",
    "logoutButton":"Log out",
    "ouraTitle": "Oura Ring cloud platform",
    "ouraCloudServiceDescriptionBack" : "The Oura wearable devices, in particular the Oura ring, allows to collect health data from the wearer's finger to monitor sleep and physical activity.",
    "deviceAlert":"Device alert",
    "deviceAlertTitle":"It is not possible to enable the device",
    "deviceAlertDescription":"You are not logged in the related cloud service",
    "deleteInformationFirst":"All the device information, its last measurement in the Orion Context Broker",
    "deleteInformationSecond":"and the historical ones in the Object Storage will be permanently deleted.",
    "enableTitle":"Enable Device",
    "confirmDescription":"Do you confirm to change the status of the device?",
    "enableDescription":"Enabling the Device, it will be possibile to send/get the Device measurements.",
    "confirm":"confirm",
    "disableTitle":"Disable Device",
    "disableDescription":"Disabling the Device, it will be no longer possible to send/get the Device measurements.",
    "refreshToken":"Refresh Token",
    "refreshTokenConfirm":"Do you confirm to refresh the e-VITA Device Token?",
    "refreshTokenDescription":"The e-VITA Device Token will be changed.",
    "refresh":"refresh",
    "deviceDetails": "Device Details", 
    "endpointSend": "Endpoint to send measures",
    "examplePayload": "Example Payload",
    "endpointGet": "Endpoint to get the last measure",
    "updateFrequency": "Update measures frequency",
    "sendMeasureUpdated": "Send measure time successfully updated",
    "deviceTokenRefreshed": "Device Token successfully refreshed.",
    "minutes": "Minutes",
    "selectDeviceCategory":"Select the specific category of device you want to register from among those available and enter your choice.",
    "loginCloudAlert": "Please, login to the cloud service first!",
    "selectDeviceType": "Select the specific Device Type you want to register, based on the previously selected device category.",
    "select":"Select",
    "back":"Back",
    "enterInfo":"Enter the required information about the Device to be registered.",
    "measureFrequency":"Measure frequency",
    "create":"Create",
    "frequency":"frequency",
    "devCategory": "Device Category",
    "devType": "Device Type", 
    "devInfo": "Device Info",
    "details":"details",
    "404Error":"404 Page Not Found",
    "404Description":"The page you were looking for doesn't exist",
    "404BackHome":"Take me home",
    "Swagger API":"Swagger API",
    "Manuals":"Manuals",
    "e-VITA Dashboard":"e-VITA Dashboard",
    "Dashboard manual":"Dashboard manual",
    "e-VITA Devices":"e-VITA Devices",
    "Gatebox":"Gatebox",
    "Homepage":"Dashboard",
    "Devices":"Devices",
    "Cloud Services":"Cloud Services",
    "noMeasuresMessageFirst":"No measures yet present in the Context Broker",
    "noMeasuresMessageSecond":"For this type of device, the messages are not sent to the Context Broker",
    "lastMeasureMessageSuccess":"Last measurement successfully obtained from the Context Broker for the Device",
    "lastMeasureMessageError":"Error: last measurement from the Context Broker not obtained for the Device",
    "devRegisterSuccess":"Device successfully registered",
    "devRegisterError":"Error: device not registered",
    "devDeletionSuccess":"Device successfully deleted",
    "devDeletionError":"Error: device not deleted",
    "devEnableSuccess":"Device successfully Enabled",
    "devDisableSuccess":"Device successfully Disabled",
    "devEnableError":"Error: device not Enabled",
    "devDisableError":"Error: device not Disabled",
    "cloudLogoutError":"Error: Log out failed",
    "cloudLoginError":"Error: Log in failed",
    "updateUserSuccess":"User profile successfully updated",
    "metadataCreationError":"Error: Custom field Name already present",
    "metadataCreationSuccess":"Custom field successfully added",
    "enterMetadata":"Add additional attribute for the device.",
    "additionalAttributes":"Additional Attributes",
    "metadataDeletionSuccess":"Device attribute successfully deleted",
    "metadataDeletionError":"Error: device attribute not deleted",
    "metadataAdditionSuccess":"Device attribute successfully added",
    "metadataAdditionError":"Error: device attribute not added",
    "addAttribute":"Add attribute",
    "attributeLabel":"Attribute",
    "nameAlert":"Use a different name",
    "name":"Name",
    "value":"Value",
    "removeAttribute":"Remove attribute",
    "deleteAttributeTitle":"Delete Static Attribute",
    "deleteAttributeDescr":"Do you confirm to delete the device attribute",
    "deleteAttributeLabel":"The device attribute will be permanently removed.",
    "updateDeviceName":"Update device name",
    "updateDeviceNameSuccess":"Device Name successfully updated",
    "updateDeviceNameError":"Error: Device Name not updated",
    "editTile":"Edit Device Attributes",
    "getHistoricalDataSuccess":"Historical data downloaded successfully",
    "getHistoricalDataError":"Error: historical data not downloaded",
    "getHistoricalData":"Download historical data",
    "edit":"Edit",
    "getHistoricalDataTitle":"Get Historical Data",
    "getHistoricalDataDescription":"Enter start and end date to download the historical data of the device",
    "startDate":"Start Date",
    "endDate":"End Date",
    "startDateSelect":"Select a start date (mandatory)",
    "endDateSelect":"Select an end date (optional)",
    "download":"download",
    "getHistoricalDataAlert":"Historical data not present for the device on the selected dates",
    "enableTooltip":"Enable/Disable the device",
    "detailsTooltip":"Device Details",
    "editTooltip":"Edit device attributes",
    "deleteTooltip":"Delete device",
    "historicalDataAlert":"There is no historical data on the selected dates",
    "historicalDataAlert2":"Invalid start date entered or after the end date",
    "search":"Search",
    "chatRasaTitle":"Dialogue Manager",
    "messagePlaceholder":"Type a message",
    "activateChatError":"Error: Chat not activated",
    "getAllHistoricalDataDescription":"Enter a start date and any other information to get all the historical data available",
    "Historical data":"Historical data",
    "countryInsert":"Enter the Country of interest (optional)",
    "groupSelect":"Select the device category (optional)",
    "typeSelect":"Select device type (optional)",
    "rasaError":"Error: Problem in receiving the response from the Dialogue Manager. Please try again later.",
    "personalAccessToken":"Personal Access Token",
    "copy":"Copy to clipboard",
    "googleDeviceInfo":"Registration of a Google Assistant-type device is automatic when a request is made to the Google webhook API",
    "selectLocation":"Select Location",
    "age": "Age",
    "studyCenter": "Study Center",
    "emailReminder": "Email Reminder",
    "phoneReminder": "Phone Reminder",
    "groceryShopping": "Grocery shopping",
    "groceryShoppingDescription": "What to shop for the day/week",
    "cooking": "Cooking",
    "cookingDescription": "Cooking a recipe",
    "preparingList": "Preparing List",
    "preparingListDescription": "List of items to buy",
    "decisionMaking": "Decision-making",
    "decisionMakingDescription": "Deciding what to cook",
    "dishwashing": "Dishwashing",
    "dishwashingDescription": "Washing the used utensils",
    "clearingCrockery": "Clearing crockery",
    "clearingCrockeryDescription": "Putting things away after cooking",
    "eating": "Eating",
    "eatingDescription": "Eating the prepared meal",
    "vacuumMopping": "Vacuum, mopping",
    "vacuumMoppingDescription": "Cleaning carpets, floors, number of rooms, size of rooms, water spay, was, dry wipe",
    "cleaning": "Cleaning",
    "cleaningBath": "Cleaning the bath",
    "cleaningBathDescription": "Bathtub, shower cubicles, tiles, floors/walls, basin, size of the bathroom, number of bathrooms",
    "cleaningToilet": "Cleaning the toilet",
    "cleaningToiletDescription": "Toilet bowls, toilet seats, tiles, floor/walls, number of toilets",
    "cleaningWindowsDoors": "Cleaning windows, doors",
    "cleaningWindowsDoorsDescription": "Number of windows, size of windows, inside/outside",
    "washDryingClothes": "Wash and drying the clothes",
    "washDryingClothesDescription": "Separate clothes according to colour and type, wash the laundry in washing machinek",
    "laundry": "Laundry",
    "ironingFoldingClothes": "Ironing and folding the clothes",
    "ironingFoldingClothesDescription": "Divide according to wearer, clothing, fold the laundry and put it away",
    "tidyingRoom": "Tidying a room",
    "tidyingRoomDescription": "Making bed, putting away things, changing sheets",
    "takingOutTrash": "Taking out trash",
    "takingOutTrashDescription": "Separating the waste, tasking out trash from toilet(s), bathroom(s), kitchen and other trash cans.",
    "gardenMaintenance": "Garden maintenance",
    "gardenMaintenanceDescription": "Weeding, watering, pruning, planting new seeds",
    "carWash": "Car wash",
    "carWashDescription": "Washing from the outside, cleaning from the inside",
    "mobility": "Mobility",
    "mobilityDescription": "Change of vehicles (bus, trams, metros, car etc.)",
    "shopping": "Shopping",
    "meetingFamilyFriends": "Meeting family and friends",
    "meetingFamilyFriendsDescription": "",
    "social": "Social",
    "attendingSocialEvents": "Attending social events",
    "attendingSocialEventsDescription": "",
    "goingWithOthers": "Going out with others",
    "goingWithOthersDescription": "Outside activities",
    "publicTransport": "Public transport",
    "publicTransportDescription": "",
    "transport": "Transport",
    "privateTransport": "Private transport",
    "privateTransportDescription": "",
    "useTaxi": "Usage of Taxi",
    "useTaxiDescription": "",
    "watchingMovies": "Watching movies",
    "watchingMoviesDescription": "Watching at home, going to the cinema",
    "personalInterest": "personalInterest",
    "music": "Music",
    "musicDescription": "Hearing, doing and learning to perform",
    "travel": "Travel",
    "travelDescription": "Consider where to go, when to go, bookings, transport and what to prepare",
    "fishing": "Fishing",
    "fishingDescription": "Decide where to go, make preparations",
    "knittedMaterial": "Knitted material",
    "knittedMaterialDescription": "Materials, colours, design, crochet, bar knitting",
    "handicrafts": "Handicrafts",
    "handicraftsDescription": "Embroidery, sewing, etc. Think by colour, fabric and what you make",
    "horticulture": "Horticulture",
    "horticultureDescription": "Vegetable gardens, gardening. Planted from seed, planted from seedlings, image of what it will look like when it grows up.",
    "walking": "Walking",
    "walkingDescription": "",
    "sportInterest": "Sport Interests",
    "swimming": "Swimming",
    "swimmingDescription": "",
    "otherDescription": "",
    "gym": "Gym",
    "gymDescription": "",
    "cycling": "Cycling",
    "cyclingDescription": "",
    "takingMedication": "Taking medication",
    "takingMedicationDescription": "Frequency of medication",
    "medicationManagement": "Medication Management",
    "checkingRemainingMedication": "Checking for remaining medication",
    "checkingRemainingMedicationDescription": "Type, how many left",
    "understandingMedicationSchedule": "Understanding medication schedule",
    "understandingMedicationScheduleDescription": "Schedule management",
    "walk": "Walk",
    "walkDescription": "Every day, according to mood and weather",
    "petCare": "Pet care",
    "feeding": "Feeding",
    "feedingDescription": "Type of pet",
    "cleaningDescription": "Cleaning up excreta, trimming",
    "morning": "Morning",
    "afternoon": "Afternoon",
    "evening": "Evening",
    "night": "Night",
    "selectedUser": "Selected User : ",
    "selectUserManage": "Please Select a User to Manage",
    "dailyRoutine": "Daily Routine",
    "dailyRoutineList": "List of Daily Routine Present",
    "select_a_routine": "Select a routine",
    "routineSelected": "Routine Selected",
    "time_of_the_day": "Time of the Day",
    "select_time_of_day": "select the time of day",
    "supportNeeded": "Support Needed",
    "notSpecified": "Not Specified",
    "saveRoutine": "Save Routine",
    "routineName": "Routine Name",
    "eatingHabits": "Eating Habits",
    "numberOfMeals": "Number Of Meals",
    "selectNumberOfMeals": "select the Number Of Meals",
    "cookingForOneself": "Cooking For Oneself",
    "lossOfAppetite": "Loss Of Appetite",
    "caloriesIntake": "Calories Intake      (kcal)",
    "caloriesIntakeTooltip": "If not adherence: prompt the user to stimulate the use of nutrition chatbot This could be difficult to argue if we also want to collect the exact medication....",
    "saveEatingHabits": "Save Eating Habits",
    "exercising": "Exercising",
    "adherenceToExercise": "Adherence To Exercise Training",
    "select_adherence_value": "select the adherence value",
    "motivationToExercise": "Motivation To Do Exercises",
    "preferenceOfExercise": "Preference Of Exercise Type",
    "bodyMovementsAvoid": "Body Movements To Avoid",
    "saveExercising": "Save Exercising",
    "socialHabits": "Social Habits",
    "participationInActivities": "Participation In Social Activities",
    "feelingsLoneliness": "Feelings Of Loneliness",
    "feelRedundant": "Feel Of Being Redundant",
    "livingCondition": "Living Condition",
    "select_living_condition": "select the living Condition",
    "employment": "Employment",
    "select_employment": "select the employment",
    "pastEmployment": "Past Employment",
    "lifePartner": "Life Partner",
    "select_life_partner": "select the Life Partner",
    "livingArea": "Living Arear",
    "select_living_area": "select the living area",
    "householdSize": "Household Size     (m²)",
    "owningPet": "Owning Pet",
    "lifeEnjoyment": "Life Enjoyment",
    "select_life_enjoyment": "select the living Condition",
    "needPersonalCare": "Need Personal Care",
    "friendsAndContact": "Friends And Relatives Contact",
    "academicBackground": "Academic Background",
    "householdClassification": "Household Classification",
    "familyStructure": "Family Structure",
    "hobbies": "Hobbies",
    "habits": "Habits",
    "saveSocialHabits": "Save Social Habits",
    "activityMonitoring": "Activity Monitoring",
    "fallRiskDomain": "Fall Risk Domain",
    "physicalDomain": "Physical Domain",
    "nutritionalDomain": "Nutritional Domain",
    "socialDomain": "Social Domain",
    "cognitiveDomain": "Cognitive Domain",
    "emotionalDomain": "Emotional Domain",
    "sleepDomain": "Sleep Domain",
    "dailyLiving": "Daily Living",
    "coachingCycle": "Coaching Cycle",
    "assessCondition": "Assess Condition",
    "defineGoals": "Define Goals",
    "implementAction": "Implement Action",
    "evaluate": "Evaluate",
    "readinessLevel": "Readiness Level",
    "readinessLevelTooltip": "His/Her Readiness Level?",
    "currentStepCycle": "Current Step In Cycle",
    "currentStepCycleTooltip": "The current Step in Cycle?",
    "selectedTopic": "Selected Topic",
    "notifications": "Notifications",
    "notificationsTooltip": "Do you want notification for this cycle?",
    "saveCoachingCycle": "Save Coaching Cycle",
    "mainAssessments": "Main Assessments",
    "cognitiveStatus": "Cognitive Status",
    "cognitiveStatusTooltip": "Range 22-25 = more stimulation for using cognitive intervention is needed",
    "psychologicalMood": "Psychological Mood",
    "psychologicalMoodTooltip": "Range 6 -9 = more stimulation for using social platform and subjective well-being practices / contact Human Coach to receive the further recommendations",
    "frailty": "Frailty",
    "frailtyTooltip": "4 = more stimulation on physical activity and cognitive status, falls monitoring",
    "psychologicalActivity": "Physical Activity",
    "psychologicalActivityTooltip": "7-8 = more stimulation on physical activity and steps",
    "nutrition": "Nutrition",
    "dayTime": "Day Time",
    "dayTimeTooltip": "Evening = potential worsening of psychological mood ; more stimulation on emotional status Difficulty in sleeping/early morning wake up deviations  = more stimulation on emotional status",
    "periodOfTheYear": "Period Of The Year",
    "periodOfTheYearTooltip": "Outside/Inside lighting condition = more stimulation to counteract inactivity + stimulation on emotional status",
    "saveMainAssessments": "Save Main Assessments",
    "_5M": "5 minutes",
    "_30M": "30 minutes",
    "_1H": "1 hour",
    "_12H": "12 hours",
    "_1D": "1 Day",
    "_2D": "2 Days",
    "_7D": "1 Week",
    "_1MON": "1 Month",
    "spring": "Spring",
    "summer": "Summer",
    "fall": "Fall",
    "winter": "Winter",
    "medicalData": "Medical Data",
    "medicalHistory": "Medical History",
    "medicalHistoryTooltip": "Details (whether or not a medical examination has been carried out and instructions from a doctor)",
    "medicationStatus": "Medication Status",
    "medicationStatusTooltip": "Taking the medicine",
    "healthMonitoring": "Health Status Monitoring",
    "healthMonitoringTooltip": "Blood pressure measurement, body temperature, pulse and respiration rate  ",
    "interestDietChanges": "Interest In Diet Changes",
    "interestDietChangesTooltip": "If the answer is positive, ask, what kind of changes",
    "insomnia": "Insomnia",
    "feelForgetfulness": "Feel Forgetfulness",
    "numberOfSitsStands": "Number Of Sits Stands",
    "riskOfFallingClassification": "Risk Of Falling Classification",
    "riskOfFallingClassificationTooltip": "Clinical Frailty Scale",
    "fearOfFallingQuestionnaire": "Fear Of Falling Questionnaire",
    "stsTimeHighScore": "STS Time High Score",
    "stsTimeHighScoreTooltip": "sit to stand",
    "historyOfFallsLastYear": "History Of Falls Last Year",
    "historyOfFallsLastYearTooltip": "number of falls",
    "height": "Height       (cm)",
    "weight": "Weight       (kg)",
    "selfRatedHealth": "Self Rated Health",
    "comorbidities": "Comorbidities",
    "historyOfStroke": "History Of Stroke",
    "hypertension": "Hypertension",
    "gaitProblems": "Gait Problems",
    "diabetes": "Diabetes",
    "diabetesTooltip": "0-No, 1-1, 2-2, 3-Unknown",
    "select_diabetes_type": "select the diabetes type",
    "otherDiseases": "Other Diseases",
    "bmi": "BMI",
    "cancer": "Cancer",
    "depression": "Depression",
    "depressionTooltip": "Select the Domain referring the coaching Cycle",
    "saveMedicalData": "Save Medical Data",
    "reminders": "Reminders",
    "reminderComponent": "Reminder Component",
    "select_reminder_device": "Select the device referring the reminder",
    "coachingDeviceConsider": "Coaching Device to consider",
    "selectDevice": "Select a Device",
    "reminderType": "Reminder Type",
    "reminderTypeTooltip": "Select the reminder type",
    "select_reminder_type": "Select a Type",
    "dateTimePicker": " Date of the Event",
    "dateTimePickerTooltip": "The date of the event including the time zone",
    "numberRepetitions": "Repetitions",
    "numberRepetitionsTooltip": "Number of repetitions of the notification",
    "repetitionPeriod": "Repetition Cadence",
    "repetitionPeriodTooltip": "how often the event will be repeated",
    "notifyInAdvance": "Notify in Advance",
    "notifyInAdvanceTooltip": "how long before you want to be notified",
    "saveReminder": "Save Reminder",
    "presentReminders": "List of Reminders Present",
    "message": "Message",
    "eventSchedule": "Event Schedule",
    "number_of_repetitions": "Number of Repetitions",
    "reminderError": "User Reminder already present: Register Error",
    "messageEventScheduleError": "You must at least specify message and eventSchedule: Register Error",
    "cadendeRepetitionError": "You must at least specify a repetition cadence when the number of repetitions is set: Register Error",
    "reminderRegistrationSuccess": "User Reminders Register Success",
    "reminderRegistrationError": "User Reminders Register Error",
    "reminderDeletingSuccess": "Single Reminder Deleting Success",
    "reminderDeletingError": "User Reminders Register Error",
    "dailyRoutineRegisterPresentError": "Daily Routine already present: Register Error",
    "timeOfDayError": "You must at least specify a time of the day: Register Error",
    "dailyRoutineRegisterSuccess": "Daily Routines Register Success",
    "dailyRoutineRegisterError": "Daily Routines Register Error",
    "dailyRoutineDeletingSuccess": "Daily Routine Deleting Success",
    "dailyRoutineDeletingError": "Daily Routines Deleting Error",
    "eatingHabitRegisterSuccess": "Eating Habit Register Success",
    "eatingHabitRegisterError": "Eating Habit Register Error",
    "exercisingRegisterSuccess": "Exercising Register Success",
    "exercisingRegisterError": "Exercising Register Error",
    "mainAssessmentsRegisterSuccess": "MainAssessments Register Success",
    "mainAssessmentsRegisterError": "MainAssessments Register Error",
    "medicalDataRegisterSuccess": "MedicalData Register Success",
    "medicalDataRegisterError": "MedicalData Register Error",
    "socialHabitsRegisterSuccess": "SocialHabits Register Success",
    "socialHabitsRegisterError": "SocialHabits Register Error",
    "coachingCycleRegisterSuccess": "CoachingCycle Register Success",
    "coachingCycleRegisterError": "CoachingCycle Register Error",
    "confirmSaving": "Confirm saving",
    "confirmSavingTooltip": "The data in the current table has not been saved. Do you want to save before switching tables?",
    "noRepetition": "No repetition",
    "perseoExerciseRules": "Perseo Sensor based rule set-up",
    "generate": "Generate",
    "selectCoach": "Select your coach",
    "frequencyDescription":"Time interval (Minutes) how ofter the platform reads measurements from the cloud",
    "select_language_rasa": "Select the language with which to talk to the Dialogue Manager",
    "notification_delay":"Notification delay",
    "notification_delay_descr":"Time interval in which received notifications are checked",
    "loading": "Loading Data...",
    "leaderboard": "Leaderboard",
    "usersCompetition": "Users Competition",
    "usersCompetitionList": "List of best Users",
    "usersCompetitionWeek": "Weekly Users Competition",
    "usersCompetitionWeekList": "List of best Weekly Users",
    "usersCompetitionTotal": "Total Users Competition",
    "usersCompetitionTotalList": "List of best Users from the Start",
    "rank": "Rank",
    "region": "Region",
    "achievement": "Achievement",
    "studyCentersCompetition": "Study Centers Competition",
    "studyCentersCompetitionList": "List of best Study Centers",
    "countriesCompetition": "Countries Competition",
    "countriesCompetitionList": "Best Country",
    "regionCompetition": "Region Competition",
    "regionCompetitionResults": "Region Competition Results",
    "notAvailable": " Not Available",
    "External_assistance_with_indoor_safety": "Robot starts dialog about safety domain",
	"External_welcome_and_request": "Robot starts dialog about security domain",
	"External_how_are_you_today": "Robot asks about user s feelings",
	"EXTERNAL_How_was_your_day": "Robot asks about user s day",
    "EXTERNAL_time_for_checking_calender": "Robot reminds doctor appointment",
    "timestamp": "Timestamp",
    "fall_asleep_time": "Fall asleep time",
    "wakeup_time": "Wakeup time",
    "light_sleep_time": "Light sleep time",
    "deep_sleep_time": "Deep sleep time",
    "dream_time": "Dream time",
    "awake_time": "Awake time",
    "all_sleep_time": "All sleep time",
    "wakeup_count": "Wakeup count",
    "deep_sleep_part": "Deep sleep part",
    "sleep_score": "Sleep score",
    "sleep_latency": "Sleep latency",
    "sleep_efficiency": "Sleep efficiency",
    "sleep_type": "Sleep type",
    "calories": "Calories",
    "steps": "Steps",
    "distance": "Distance",
    "altitude": "Altitude",
    "step_rate": "Step rate",
    "jump_height": "Jump height",
    "passage_duration": "Passage duration",
    "skip_speed": "Skip speed",
    "bpm_exercise": "Bpm exercise",
    "running_ground_contact_time": "Running ground contact time",
    "running_ground_impact_acceleration": "Running ground impact acceleration",
    "running_swing_angle": "Running swing angle",
    "running_eversion_excursion": "Running eversion excursion",
    "running_hang_time": "Running hang time",
    "running_ground_hang_time_rate": "Running ground hang time rate",
    "running_fore_foot_strike_pattern": " Running fore foot strike pattern",
    "running_hind_foot_strike_pattern": "Running hind foot strike pattern",
    "running_whole_foot_strike_pattern": "Running whole foot strike pattern",
    "running_impact_peak": "Running impact peak",
    "running_vertical_oscillation": "Running vertical oscillation",
    "running_vertical_ratio": "Running vertical ratio ",
    "running_gc_time_balance": "Running gc time balance",
    "body_weight": "Body weight",
    "body_fat_rate": "Body fat rate",
    "body_fat": "Body fat",
    "BMI": "Body mass index",
    "muscle_mass": "Muscle mass",
    "basal_metabolism": "Basal metabolism",
    "moisture": "Moisture ",
    "moisture_rate": "Moisture rate",
    "Height (cm)": "Height (cm)",
    "systolic_pressure": "Systolic pressure",
    "diastolic_pressure": "Diastolic pressure",
    "sphygmus": "Sphygmus",
    "measurement_anomaly_flag": "Measurement anomaly flag",
    "before_measure_activity": "Before measure activity",
    "bpm": "Beats per minute",
    "saturation": "Saturation",
    "level": "Level",
    "measure_time": "Measure time",
    "score": "Score",
    "grade": "Grade ",
    "measure_type": "Measure type",
    "temperature": "Temperature",
    "ecg_type": "Electrocardiogram (ECG) type",
    "voltage_datas": "Voltage datas",
    "settingsPageTitle": "Set Settings Page",
    "settingsPageDescription": "Select the desired URL for conversation with the RASA system",
    "URLsList": "List of available URLs",
    "rasaURLSettingSuccess":"Rasa URL updated",
    "resetSetting": "Reset",
    "insert_reminder_title_tooltip": "You can choose the title for this Reminder",
    "insertTitle": "Insert Reminder name",
    "insertReminderTitle": "Reminder name",
    "reminderTitle":"Reminder name",
    "Personal Info":"Personal Info",
    "Medical Info":"Medical Info",
    "Reminders":"Reminders",
    "Perseo Rules":"Perseo Rules",
    "Leaderboard":"Leaderboard",
    "Settings":"Settings",
    "perseoTitle":"Perseo Rules",
    "ruleName":"Rule Name"
}
